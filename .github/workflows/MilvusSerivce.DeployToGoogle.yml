name: "Deploy Milvus Service to Google Cloud"

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          project_id: ${{ secrets.GOOGLE_PROJECT }}
          credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: 'Set up Cloud SDK'
        uses: google-github-actions/setup-gcloud@v2
        with:
          install_components: 'gke-gcloud-auth-plugin'

      - name: Build and Push Docker Image
        env:
          GOOGLE_PROJECT: ${{ secrets.GOOGLE_PROJECT }}
        run: |
          gcloud auth configure-docker europe-west4-docker.pkg.dev
          docker build -t europe-west4-docker.pkg.dev/$GOOGLE_PROJECT/milvus-service/python:latest .
          docker push europe-west4-docker.pkg.dev/$GOOGLE_PROJECT/milvus-service/python:latest

      - name: Deploy to GKE
        env:
          GOOGLE_PROJECT: ${{ secrets.GOOGLE_PROJECT }}
        run: |
          gcloud container clusters get-credentials autopilot-milvus-service --region europe-west4
          kubectl apply -f resources.yml

  load-test:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: 'Set up Cloud SDK'
        uses: google-github-actions/setup-gcloud@v2
        with:
          install_components: 'gke-gcloud-auth-plugin'

      - name: Connect to GKE Cluster
        run: |
          gcloud container clusters get-credentials autopilot-milvus-service --region europe-west4 --project ${{ secrets.GOOGLE_PROJECT }}

      - name: Wait for Deployment
        run: |
          kubectl rollout status deployment/python

      - name: Get External IP
        run: |
          kubectl get svc python -o json
          echo "EXTERNAL_IP=$(kubectl get svc python -o json | jq -r .status.loadBalancer.ingress[0].ip)" >> $GITHUB_ENV

      - name: Install K6
        run: |
          sudo gpg -k
          sudo gpg --no-default-keyring --keyring /usr/share/keyrings/k6-archive-keyring.gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C5AD17C747E3415A3642D57D77C6C491D6AC1D69
          echo "deb [signed-by=/usr/share/keyrings/k6-archive-keyring.gpg] https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
          sudo apt-get update
          sudo apt-get install k6

      - name: Login to K6 Cloud
        run: |
          k6 login cloud --token ${{ secrets.K6_CLOUD_TOKEN }}

      - name: Run Load Test
        run: |
          k6 run --out cloud script.js
